import{G as A,a as v,D as y,d as g}from"./GamepadApiWrapper-CHaH_8P-.js";const t=0,p=0,_=1,f=2,m=3,w=["button_1","button_2","button_3","button_4","shoulder_button_front_left","shoulder_button_front_right","shoulder_trigger_back_left","shoulder_trigger_back_right","select_button","start_button","stick_button_left","stick_button_right","d_pad_up","d_pad_down","d_pad_left","d_pad_right"],o=new A(.1),u=new v({updateDelay:150,axisDeadZone:.05,buttonConfigs:w.map((e,n)=>({fireWhileHolding:e.includes("d_pad")||n<4}))}),r=document.getElementById("gamepad-event-display"),h=document.getElementById("button-table"),i=document.getElementById("gamepad-event-area");if(!r)throw new Error("Could not find element with id 'gamepad-event-display'");if(!h)throw new Error("Could not find element with id 'button-table'");if(!i)throw new Error("Could not find element with id 'gamepad-event-area'");u.onGamepadConnect(e=>{console.log("Gamepad connected: ",e),r.appendChild(document.createTextNode(`Gamepad connected: ${e.gamepad.id}
`))});u.onGamepadDisconnect(e=>{console.log("Gamepad disconnected: ",e),r.appendChild(document.createTextNode(`Gamepad disconnected: ${e.gamepad.id}
`))});u.onGamepadButtonChange((e,n,l)=>{console.log(`Gamepad ${e} button change: `,l);let a=`Buttons changed ${n.id} (gpad #${e}):
`;for(let s=0;s<n.buttons.length;s++){const d=l[s];if(!d)continue;a+=`    Button #${s} (value = ${n.buttons[s].value})`,a+=d.heldDown?" | held down ":"",a+=d.pressed?" | pressed   ":"",a+=d.released?" | released  ":"",a+=d.touchDown?" | touch down":"",a+=d.touchUp?" | touch up  ":"",a+=d.valueChanged?" | value change":"",a+=`
`;const c=h.children[s];c&&(c.children[1].style.backgroundColor=n.buttons[s].pressed?"blueviolet":n.buttons[s].touched?"greenyellow":"")}r.appendChild(document.createTextNode(a)),i.scrollTo(0,i.scrollHeight)});u.onGamepadAxisChange((e,n,l)=>{console.log(`Gamepad ${e} axis change: `,n.axes,l);let a=`Gamepad axis changes ${n.id} (gpad #${e}):
`;for(let s=0;s<l.length;s++)l[s]&&(a+=`    Axis #${s}: value: ${n.axes[s]}
`);r.appendChild(document.createTextNode(a)),i.scrollTo(0,i.scrollHeight)});o.AddEmulatedGamepad(t,!0,y,g);window.onkeydown=e=>{const n=parseInt(e.key),l=e.ctrlKey;e.key==="["?o.MoveAxis(t,0,-1):e.key==="]"?o.MoveAxis(t,0,1):e.key==="-"?o.MoveAxis(t,1,-1):e.key==="="?o.MoveAxis(t,1,1):e.key==="ArrowLeft"?(o.MoveAxis(t,2,-1),e.preventDefault()):e.key==="ArrowRight"?(o.MoveAxis(t,2,1),e.preventDefault()):e.key==="ArrowUp"?(o.MoveAxis(t,3,-1),e.preventDefault()):e.key==="ArrowDown"?(o.MoveAxis(t,3,1),e.preventDefault()):isNaN(n)?e.keyCode&&o.PressButton(t,e.keyCode-65+10,l?0:1,!0):o.PressButton(t,n,l?0:1,!0)};window.onkeyup=e=>{const n=parseInt(e.key);e.key==="["||e.key==="]"?o.MoveAxis(t,p,0):e.key==="-"||e.key==="+"?o.MoveAxis(t,_,0):e.key==="ArrowLeft"||e.key==="ArrowRight"?(o.MoveAxis(t,f,0),e.preventDefault()):e.key==="ArrowUp"||e.key==="ArrowDown"?(o.MoveAxis(t,m,0),e.preventDefault()):isNaN(n)?e.keyCode&&o.PressButton(t,e.keyCode-65+10,0,!1):o.PressButton(t,n,0,!1)};
