var C=Object.defineProperty;var A=(e,i,s)=>i in e?C(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s;var r=(e,i,s)=>(A(e,typeof i!="symbol"?i+"":i,s),s),y=(e,i,s)=>{if(!i.has(e))throw TypeError("Cannot "+s)};var u=(e,i,s)=>(y(e,i,"read from private field"),s?s.call(e):i.get(e)),d=(e,i,s)=>{if(i.has(e))throw TypeError("Cannot add the same private member more than once");i instanceof WeakSet?i.add(e):i.set(e,s)},H=(e,i,s,l)=>(y(e,i,"write to private field"),l?l.call(e,s):i.set(e,s),s);var D=(e,i,s)=>(y(e,i,"access private method"),s);import{a as I,c,b}from"./GamepadApiWrapper.237e9163.js";var p,f,v,x,L;class W{constructor(i,s){d(this,x);r(this,"config");r(this,"apiWrapper");d(this,p,void 0);d(this,f,void 0);r(this,"defaultJoystickDisplayFunction",(i,s,l)=>{const a=i.movementRange;if(i.joystickElement.style.transform=`translate(${s*a}px,${l*a}px)`,i.highlights&&this.config.moveDirectionHighlightClass){const t=i.highlights[c.up],o=i.highlights[c.down],h=i.highlights[c.left],n=i.highlights[c.right];t&&l<-.1?t.classList.add(this.config.moveDirectionHighlightClass||""):t&&t.classList.remove(this.config.moveDirectionHighlightClass||""),o&&l>.1?o.classList.add(this.config.moveDirectionHighlightClass||""):o&&o.classList.remove(this.config.moveDirectionHighlightClass||""),h&&s<-.1?h.classList.add(this.config.moveDirectionHighlightClass||""):h&&h.classList.remove(this.config.moveDirectionHighlightClass||""),n&&s>.1?n.classList.add(this.config.moveDirectionHighlightClass||""):n&&n.classList.remove(this.config.moveDirectionHighlightClass||"")}});r(this,"defaultButtonDisplayFunction",(i,s,l,a,t,o)=>{const h=i.highlight;if(this.config.touchedHighlightClass&&h&&(t.touchDown?h.classList.add(this.config.touchedHighlightClass):t.touchUp&&h.classList.remove(this.config.touchedHighlightClass)),this.config.pressedHighlightClass&&h&&(t.pressed?h.classList.add(this.config.pressedHighlightClass):t.released&&h.classList.remove(this.config.pressedHighlightClass)),i.type==b.variable){const n=i.directionHighlight;if(this.config.moveDirectionHighlightClass&&n&&(t.pressed?n.classList.add(this.config.moveDirectionHighlightClass):t.released&&n.classList.remove(this.config.moveDirectionHighlightClass)),i.buttonElement){const g=i.direction==c.left||i.direction==c.right,m=i.direction==c.right||i.direction==c.down;i.buttonElement.style.transform=`translate${g?"X":"Y"}(${m?"":"-"}${s*i.movementRange}px)`}}});d(this,v,(i,s,l)=>{if(i!=this.config.gamepadIndex)return;const a=this.config.buttons;for(let t=0;t<a.length;t++){const o=l[t];if(!o||Object.keys(o).length==0)continue;const h=a[t],n=s.buttons[t].value,g=s.buttons[t].touched,m=s.buttons[t].pressed;this.config.buttonDisplayFunction?this.config.buttonDisplayFunction(h,n,g,m,o,t):this.defaultButtonDisplayFunction(h,n,g,m,o,t)}});this.config=i,this.apiWrapper=s||new I({buttonConfigs:[],updateDelay:0}),H(this,p,this.apiWrapper.onGamepadButtonChange(u(this,v).bind(this))),H(this,f,this.apiWrapper.onGamepadAxisChange(D(this,x,L).bind(this)))}cleanup(){this.apiWrapper.offGamepadButtonChange(u(this,p)),this.apiWrapper.offGamepadAxisChange(u(this,f))}}p=new WeakMap,f=new WeakMap,v=new WeakMap,x=new WeakSet,L=function(i,s,l){if(i!=this.config.gamepadIndex)return;const a=this.config.sticks;for(let t=0;t<a.length;t++){const o=a[t];if(o.xAxisIndex!==void 0&&l[o.xAxisIndex]||o.yAxisIndex!==void 0&&l[o.yAxisIndex]){const h=s.axes,n=o.xAxisIndex!==void 0&&h[o.xAxisIndex]||0,g=o.yAxisIndex!==void 0&&h[o.yAxisIndex]||0;this.config.joystickDisplayFunction?this.config.joystickDisplayFunction(o,n,g):this.defaultJoystickDisplayFunction(o,n,g)}}};export{W as G};
