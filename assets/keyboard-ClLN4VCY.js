import{G as A,a as m,P as k,D as h,b as v,s as n}from"./GamepadEmulator-CNWoeGf3.js";const t=0,o=new A(.1),u=new m({updateDelay:150,axisDeadZone:.05,buttonConfigs:k.map((r,c)=>({fireWhileHolding:r.includes("d_pad")||c<=3}))});window.addEventListener("DOMContentLoaded",()=>{const r=document.getElementById("gamepad-event-area"),c=document.getElementById("gamepad-event-display"),p=document.getElementById("button-table");if(!r)throw new Error("Could not find element with id 'gamepad-event-area'");if(!c)throw new Error("Could not find element with id 'gamepad-event-display'");if(!p)throw new Error("Could not find element with id 'button-table'");u.onGamepadConnect(e=>{console.log("Gamepad connected: ",e),c.appendChild(document.createTextNode(`Gamepad connected: ${e.gamepad.id}
`))}),u.onGamepadDisconnect(e=>{console.log("Gamepad disconnected: ",e),c.appendChild(document.createTextNode(`Gamepad disconnected: ${e.gamepad.id}
`))}),u.onGamepadButtonChange((e,i,d)=>{console.log(`Gamepad ${e} button change: `,d);let s=`Buttons changed ${i.id} (gpad #${e}):
`;for(let a=0;a<i.buttons.length;a++){const l=d[a];if(!l)continue;s+=`    Button #${a} (value = ${i.buttons[a].value})`,s+=l.heldDown?" | held down ":"",s+=l.pressed?" | pressed   ":"",s+=l.released?" | released  ":"",s+=l.touchDown?" | touch down":"",s+=l.touchUp?" | touch up  ":"",s+=l.valueChanged?" | value change":"",s+=`
`;const f=p.children[a];f&&(f.children[1].style.backgroundColor=i.buttons[a].pressed?"blueviolet":i.buttons[a].touched?"greenyellow":"")}c.appendChild(document.createTextNode(s)),r.scrollTo(0,r.scrollHeight)}),u.onGamepadAxisChange((e,i,d)=>{console.log(`Gamepad ${e} axis change: `,i.axes,d);let s=`Gamepad axis changes ${i.id} (gpad #${e}):
`;for(let a=0;a<d.length;a++)d[a]&&(s+=`    Axis #${a}: value: ${i.axes[a]}
`);c.appendChild(document.createTextNode(s)),r.scrollTo(0,r.scrollHeight)}),o.AddEmulatedGamepad(t,!0,h,v),window.onkeydown=e=>{const i=parseInt(e.key),d=e.ctrlKey;e.key==="["?o.MoveAxis(t,n.LStickX,-1):e.key==="]"?o.MoveAxis(t,n.LStickX,1):e.key==="-"?o.MoveAxis(t,n.LStickY,-1):e.key==="="?o.MoveAxis(t,n.LStickY,1):e.key==="ArrowLeft"?(o.MoveAxis(t,n.RStickX,-1),e.preventDefault()):e.key==="ArrowRight"?(o.MoveAxis(t,n.RStickX,1),e.preventDefault()):e.key==="ArrowUp"?(o.MoveAxis(t,n.RStickY,-1),e.preventDefault()):e.key==="ArrowDown"?(o.MoveAxis(t,n.RStickY,1),e.preventDefault()):isNaN(i)?e.keyCode&&o.PressButton(t,e.keyCode-65+10,d?0:1,!0):o.PressButton(t,i,d?0:1,!0)},window.onkeyup=e=>{const i=parseInt(e.key);e.key==="["?o.MoveAxis(t,n.LStickX,0):e.key==="]"?o.MoveAxis(t,n.LStickX,0):e.key==="-"?o.MoveAxis(t,n.LStickY,0):e.key==="="?o.MoveAxis(t,n.LStickY,0):e.key==="ArrowLeft"?(o.MoveAxis(t,n.RStickX,0),e.preventDefault()):e.key==="ArrowRight"?(o.MoveAxis(t,n.RStickX,0),e.preventDefault()):e.key==="ArrowUp"?(o.MoveAxis(t,n.RStickY,0),e.preventDefault()):e.key==="ArrowDown"?(o.MoveAxis(t,n.RStickY,0),e.preventDefault()):isNaN(i)?e.keyCode&&o.PressButton(t,e.keyCode-65+10,0,!1):o.PressButton(t,i,0,!1)}});
