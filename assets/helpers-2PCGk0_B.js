import{G as f,a as I,D as P,b as E,d as y,g as o,e as r,f as b,P as d,c as g,C as _,h as p}from"./GamepadEmulator-Bigwq-R0.js";import{G as O}from"./GamepadDisplay-BMj8gUV8.js";const v=(a,t)=>{var D,T;t=Object.assign({GpadDisplayConfig:{gamepadIndex:0},EmulatedGamepadIndex:0,EmulatedGamepadOverlayMode:!0,AllowDpadDiagonals:!1,VariableTriggers:!0,ClickableJoysticks:!0,JoystickDragDistance:50,TriggerDragDistance:50},t),a.classList.add("gpad-container");const n=(D=t.GpadEmulator)!=null?D:new f(.1),c=(T=t.GpadApiWrapper)!=null?T:new I({updateDelay:0,axisDeadZone:.05,buttonConfigs:[]}),u=t.EmulatedGamepadIndex;n.AddEmulatedGamepad(u,t.EmulatedGamepadOverlayMode,P,E);const l=[];for(let e=0;e<y.length;e++){const s=y[e],i=a.querySelector("#"+s),k=s.includes("trigger"),m=s.includes("stick");if(i)k&&t.VariableTriggers?l.push({buttonIndex:e,type:o.variable,tapTarget:i,dragDistance:t.TriggerDragDistance,lockTargetWhilePressed:!0,directions:{[r.down]:!0}}):(!m||t.ClickableJoysticks)&&l.push({buttonIndex:e,tapTarget:i,type:o.onOff,lockTargetWhilePressed:m===!0});else{console.error("Could not find gamepad tap target with id "+s+". Make sure to insert the full gamepad SVG into the DOM before calling setupPremadeInteractiveGamepad().");continue}}if(t.AllowDpadDiagonals)for(const[e,s]of Object.entries(b)){const i=a.querySelector("#"+e);if(i)l.push({buttonIndexes:s,type:o.onOff,tapTarget:i,lockTargetWhilePressed:!1});else{console.error("Could not find gamepad tap target with id "+e+". Make sure to insert the full gamepad SVG into the DOM before calling setupPremadeInteractiveGamepad().");continue}}n.AddButtonTouchEventListeners(u,l),n.AddJoystickTouchEventListeners(u,[{tapTarget:a.querySelector("#stick_button_left_tap_target"),dragDistance:t.JoystickDragDistance,xAxisIndex:0,yAxisIndex:1,lockTargetWhilePressed:!0,directions:{[r.up]:!0,[r.down]:!0,[r.left]:!0,[r.right]:!0}},{tapTarget:a.querySelector("#stick_button_right_tap_target"),dragDistance:t.JoystickDragDistance,xAxisIndex:2,yAxisIndex:3,lockTargetWhilePressed:!0,directions:{[r.up]:!0,[r.down]:!0,[r.left]:!0,[r.right]:!0}}]);const h=document.querySelector(`#${d[g.LStick]}`),S=document.querySelector(`#${d[g.RStick]}`);_(h),_(S);const A=d.map(e=>e.includes("trigger")&&t.VariableTriggers?{type:o.variable,direction:r.down,buttonElement:a.querySelector(`#${e}`),highlight:a.querySelector(`#${e} .${p.ButtonHighlight}`),directionHighlight:a.querySelector(`#${e} .${p.DirectionHighlight}`),movementRange:10}:{type:o.onOff,highlight:a.querySelector(`#${e} .${p.ButtonHighlight}`),extraData:{myCustomData:"onOff btn name is "+e}}),G=[{joystickElement:a.querySelector(`#${d[g.LStick]}`),xAxisIndex:0,yAxisIndex:1,movementRange:10},{joystickElement:a.querySelector(`#${d[g.RStick]}`),xAxisIndex:2,yAxisIndex:3,movementRange:10}],x=new O(Object.assign({gamepadIndex:u,buttons:A,sticks:G},t.GpadDisplayConfig),c);return{gpadEmulator:n,gpadApiWrapper:c,gpadDisplay:x}};export{v as s};
