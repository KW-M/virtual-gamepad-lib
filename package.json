{
  "name": "virtual-gamepad-lib",
  "private": false,
  "description": "Emulate and display virtual and real gamepads on the web",
  "version": "0.3.0",
  "packageManager": "pnpm@9.14.2",
  "type": "module",
  "sideEffects": false,
  "//": "Note sideEffects:false indicates compatibility with tree shaking at compilation time. This does not mean all fuctions in this package are side-effect free at runtime! E.g. Once you initilize a new GamepadEmulator() the browser Gamepad API is monkeypatched (but can be reverted)",
  "author": "Kyle Worcester-Moore",
  "license": "MIT",
  "homepage": "https://github.com/KW-M/virtual-gamepad-lib#readme",
  "bugs": {
    "url": "https://github.com/KW-M/virtual-gamepad-lib/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KW-M/virtual-gamepad-lib.git"
  },
  "keywords": [
    "gaming",
    "arcade",
    "emulator",
    "joystick",
    "typescript",
    "gamepad",
    "touch",
    "accessability"
  ],
  "peerDependencies": {
    "svgo": "^3.3.2"
  },
  "devDependencies": {
    "@vitest/browser": "^2.1.5",
    "@vitest/ui": "^2.1.5",
    "np": "^10.1.0",
    "packito": "^0.5.0",
    "typedoc": "^0.26.11",
    "typedoc-material-theme": "^1.1.0",
    "typescript": "^5.7.2",
    "vite": "^5.4.11",
    "vite-plugin-dts": "^4.3.0",
    "vitest": "^2.1.5"
  },
  "scripts": {
    "test": "vitest --run",
    "build": "tsc && vite build",
    "examples:build": "tsc --project examples; rm src/*.js; vite build --config examples/vite.config.js",
    "examples:watch": "vite --config examples/vite.config.js --host",
    "examples:preview": "vite preview --config examples/vite.config.js --host",
    "docs:build": "typedoc --options typedoc.json src/*",
    "docs:watch": "typedoc --options typedoc.json src/* --watch",
    "svgs:optimize": "svgo --recursive --folder ./gamepad_asset_originals/svg/ --output ./gamepad_assets/",
    "pub": "(pnpm i && pnpm run svgs:optimize && pnpm run build && pnpm run examples:build && pnpm run docs:build && pnpm run test && cp -r ./dist ./dist/dist && packito -d ./dist --nopublish && np --no-tests --no-publish && pnpm publish dist) || rm -r ./dist",
    "pub-preview": "(pnpm i && pnpm run svgs:optimize && pnpm run build && pnpm run examples:build && pnpm run docs:build && pnpm run test && cp -r ./dist ./dist/dist && packito -d ./dist --nopublish && np --preview --no-tests --no-publish)"
  },
  "module": "./src/index.ts",
  "main": "./dist/cjs/index.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "import": "./src/index.ts"
    },
    "./enums": {
      "import": "./src/enums.ts"
    },
    "./GamepadApiWrapper": {
      "import": "./src/GamepadApiWrapper.ts"
    },
    "./GamepadDisplay": {
      "import": "./src/GamepadDisplay.ts"
    },
    "./GamepadEmulator": {
      "import": "./src/GamepadEmulator.ts"
    },
    "./utilities": {
      "import": "./src/utilities.ts"
    },
    "./helpers": {
      "import": "./src/helpers.ts"
    },
    "./gamepad_assets/*": {
      "import": "./gamepad_assets/*",
      "default": "./gamepad_assets/*"
    }
  },
  "files": [
    "dist",
    "src",
    "gamepad_assets",
    "svgo.config.js",
    "LICENSE",
    "README.md"
  ]
}
